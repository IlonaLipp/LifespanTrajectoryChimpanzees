#!/bin/bash

# Post-FreeSurfer processing pipeline for primate brain MRI data
# This script performs several post-processing steps after FreeSurfer reconstruction:
# 1. Applies BB38 chimp atlas for cortical parcellation
# 2. Creates annotation labels from parcellations
# 3. Exports annotation volumes and subcortical masks
# 4. Calculates anatomical statistics
# 5. Creates myelin maps by projecting quantitative MRI contrasts to the surface
# 6. Generates cortical profiles using equivolumetric layering



#############################################
# Required Dependencies
#############################################
# 1. Core Software:
#    - FreeSurfer v7.0.0 or later
#    - FSL v6.0.0 or later
#    - Python 3.6 or later
#
# 2. FreeSurfer Tools:
#    - mris_ca_label
#    - tkregister2
#    - mri_annotation2label
#    - mri_vol2vol
#    - mri_label2vol
#    - mri_binarize
#    - mris_calc
#    - mris_anatomical_stats
#    - mri_vol2surf
#
# 3. FSL Tools:
#    - fslmaths
#    - fslmerge
#
# 4. Python Packages:
#    - surface_tools (for equivolumetric_surfaces)
#
# 5. Required Data:
#    - BB38 chimp atlas files:
#      - BB38chimp.annot.ctab
#      - lh.BB38chimp.gcs
#      - rh.BB38chimp.gcs
#
# 6. External Scripts:
#    - make_freesurfer_figures_with_command_line
#    - make_freesurfer_figures_with_command_line_including3T


#################################
# Configuration and Input Parameters
#################################

# Parse command line arguments
id_slash_scan_session=$1  # Scan directory pat
SUBJECTS_DIR=$2          # FreeSurfer subjects directory
SUBJECTNAME=$3          # Name of subject subdirectory in SUBJECTS_DIR

# Convert slashes to underscores in subject ID (for naming conventions)
id_underscore_scan_session=$(echo "$id_slash_scan_session" | sed "s/\//_/g")

echo "RUNNING POSTFS WITH $id_slash_scan_session $SUBJECTS_DIR $SUBJECTNAME"

# Set paths and environment variables
DATA_DIR="LS_FS_atlas/BB38chimp_forSharing_Ilona"  # Chimp atlas location
export SUBJECTS_DIR=${SUBJECTS_DIR}
export FREESURFER_HOME="/afs/cbs.mpg.de/software/freesurfer/7.0.0/ubuntu-bionic-amd64"

###########################################
### 1: Apply BB38 Chimp Atlas for Cortical Parcellation

# Apply chimp atlas if not already done
if ! [ -f "${SUBJECTS_DIR}/${SUBJECTNAME}/label/lh.BB38chimp.annot" ]; then
	# Process left hemisphere
	mris_ca_label -t ${DATA_DIR}/BB38chimp.annot.ctab ${SUBJECTNAME} lh ${SUBJECTS_DIR}/${SUBJECTNAME}/surf/lh.sphere.reg ${DATA_DIR}/lh.BB38chimp.gcs ${SUBJECTS_DIR}/${SUBJECTNAME}/label/lh.BB38chimp.annot 
	# Process right hemisphere
	mris_ca_label -t ${DATA_DIR}/BB38chimp.annot.ctab ${SUBJECTNAME} rh ${SUBJECTS_DIR}/${SUBJECTNAME}/surf/rh.sphere.reg ${DATA_DIR}/rh.BB38chimp.gcs ${SUBJECTS_DIR}/${SUBJECTNAME}/label/rh.BB38chimp.annot
fi

cd ${SUBJECTS_DIR}

# Generate registration matrices between FreeSurfer and NIFTI spaces
if ! [ -f ${SUBJECTNAME}/mri/transforms/FS_2_nifti.dat ]; then
	tkregister2 --targ ${SUBJECTNAME}.nii --mov ${SUBJECTNAME}/mri/orig.mgz --regheader --reg ${SUBJECTNAME}/mri/transforms/FS_2_nifti.dat --noedit
fi
if ! [ -f ${SUBJECTNAME}/mri/transforms/nifti_2_FS.dat ]; then
	tkregister2 --mov ${SUBJECTNAME}.nii --targ ${SUBJECTNAME}/mri/orig.mgz --regheader --reg ${SUBJECTNAME}/mri/transforms/nifti_2_FS.dat --noedit
fi

###########################################
### 2: Create Annotation Labels from Parcellations

echo "${SUBJECTNAME}/label/lh.BB38chimp-021.label"

# Generate BB38 chimp atlas labels if not present
if ! [ -f ${SUBJECTNAME}/label/lh.BB38chimp-021.label ]; then
	mri_annotation2label --subject ${SUBJECTNAME} --hemi lh --labelbase lh.BB38chimp --annotation BB38chimp
	mri_annotation2label --subject ${SUBJECTNAME} --hemi rh --labelbase rh.BB38chimp --annotation BB38chimp
fi



###########################################
### 3: Export Annotation Volumes and Create Subcortical Masks

if true; then
	# Convert aseg to NIFTI format if needed
	if ! [ -f ${SUBJECTS_DIR}/${SUBJECTNAME}/aseg.nii ]; then
		mri_vol2vol --mov ${SUBJECTS_DIR}/${SUBJECTNAME}/mri/aseg.mgz --targ ${SUBJECTS_DIR}/${SUBJECTNAME}.nii --regheader --o ${SUBJECTS_DIR}/${SUBJECTNAME}/mri/aseg.nii --no-save-reg
	fi

	# Create subcortical masks if not present
	if ! [ -f ${SUBJECTS_DIR}/${SUBJECTNAME}/aseg_volume_masks/rh_cortex.nii ]; then
		echo "Making subcortical masks"
		mkdir ${SUBJECTS_DIR}/${SUBJECTNAME}/aseg_volume_masks
		
		# Left hemisphere subcortical structures
		fslmaths ${SUBJECTS_DIR}/${SUBJECTNAME}/mri/aseg.nii -thr 10 -uthr 10 ${SUBJECTS_DIR}/${SUBJECTNAME}/aseg_volume_masks/lh_thalamus
		fslmaths ${SUBJECTS_DIR}/${SUBJECTNAME}/mri/aseg.nii -thr 11 -uthr 11 ${SUBJECTS_DIR}/${SUBJECTNAME}/aseg_volume_masks/lh_caudate
		fslmaths ${SUBJECTS_DIR}/${SUBJECTNAME}/mri/aseg.nii -thr 12 -uthr 12 ${SUBJECTS_DIR}/${SUBJECTNAME}/aseg_volume_masks/lh_putamen
		fslmaths ${SUBJECTS_DIR}/${SUBJECTNAME}/mri/aseg.nii -thr 13 -uthr 14 ${SUBJECTS_DIR}/${SUBJECTNAME}/aseg_volume_masks/lh_pallidum
		fslmaths ${SUBJECTS_DIR}/${SUBJECTNAME}/mri/aseg.nii -thr 27 -uthr 27 ${SUBJECTS_DIR}/${SUBJECTNAME}/aseg_volume_masks/lh_substantia_nigra

		fslmaths ${SUBJECTS_DIR}/${SUBJECTNAME}/mri/aseg.nii -thr 49 -uthr 49 ${SUBJECTS_DIR}/${SUBJECTNAME}/aseg_volume_masks/rh_thalamus
		fslmaths ${SUBJECTS_DIR}/${SUBJECTNAME}/mri/aseg.nii -thr 50 -uthr 50 ${SUBJECTS_DIR}/${SUBJECTNAME}/aseg_volume_masks/rh_caudate
		fslmaths ${SUBJECTS_DIR}/${SUBJECTNAME}/mri/aseg.nii -thr 51 -uthr 51 ${SUBJECTS_DIR}/${SUBJECTNAME}/aseg_volume_masks/rh_putamen
		fslmaths ${SUBJECTS_DIR}/${SUBJECTNAME}/mri/aseg.nii -thr 52 -uthr 52 ${SUBJECTS_DIR}/${SUBJECTNAME}/aseg_volume_masks/rh_pallidum
		fslmaths ${SUBJECTS_DIR}/${SUBJECTNAME}/mri/aseg.nii -thr 59 -uthr 59 ${SUBJECTS_DIR}/${SUBJECTNAME}/aseg_volume_masks/rh_substantia_nigra

		# Cortex and white matter masks
		fslmaths ${SUBJECTS_DIR}/${SUBJECTNAME}/mri/aseg.nii -thr 2 -uthr 2 ${SUBJECTS_DIR}/${SUBJECTNAME}/aseg_volume_masks/lh_wm
		fslmaths ${SUBJECTS_DIR}/${SUBJECTNAME}/mri/aseg.nii -thr 3 -uthr 3 ${SUBJECTS_DIR}/${SUBJECTNAME}/aseg_volume_masks/lh_cortex
		fslmaths ${SUBJECTS_DIR}/${SUBJECTNAME}/mri/aseg.nii -thr 41 -uthr 41 ${SUBJECTS_DIR}/${SUBJECTNAME}/aseg_volume_masks/rh_wm
		fslmaths ${SUBJECTS_DIR}/${SUBJECTNAME}/mri/aseg.nii -thr 42 -uthr 42 ${SUBJECTS_DIR}/${SUBJECTNAME}/aseg_volume_masks/rh_cortex
	fi

	# Process each atlas
	for atlas in "aparc.annot.a2009s" "BB38chimp"; do
		maskoutdir="${SUBJECTS_DIR}/${SUBJECTNAME}/${atlas}_volume_masks"
		mkdir ${maskoutdir}

		# Process each hemisphere
		for hem in "lh" "rh"; do
			# Convert ribbon file to NIFTI if needed
			if ! [ -f ${SUBJECTS_DIR}/${SUBJECTNAME}/mri/${hem}.ribbon.nii ] && [ -f ${SUBJECTS_DIR}/${SUBJECTNAME}/mri/${hem}.ribbon.mgz ] ; then
				mri_vol2vol --mov ${SUBJECTS_DIR}/${SUBJECTNAME}/mri/${hem}.ribbon.mgz --targ ${SUBJECTS_DIR}/${SUBJECTNAME}.nii --reg ${SUBJECTS_DIR}/${SUBJECTNAME}/mri/transforms/FS_2_nifti.dat --o ${SUBJECTS_DIR}/${SUBJECTNAME}/mri/${hem}.ribbon.nii --no-save-reg
				fslmaths ${SUBJECTS_DIR}/${SUBJECTNAME}/mri/${hem}.ribbon.nii -thr .5 -bin ${SUBJECTS_DIR}/${SUBJECTNAME}/mri/${hem}.ribbon_mask.nii
			fi

			# Create individual region masks
			if ! [ -f ${maskoutdir}/${hem}_ALL.nii ] && [ -f ${SUBJECTS_DIR}/${SUBJECTNAME}/mri/${hem}.ribbon.nii ]; then
				echo "Converting labels to volume masks"
				for i in {001..100}; do
					if [ -f ${SUBJECTS_DIR}/${SUBJECTNAME}/label/${hem}.${atlas}-${i}.label ] && ! [ -f ${maskoutdir}/${hem}_${i}.nii ] ; then
						# Convert label to volume
						mri_label2vol --label ${SUBJECTS_DIR}/${SUBJECTNAME}/label/${hem}.${atlas}-${i}.label --temp ${SUBJECTS_DIR}/${SUBJECTNAME}.nii --o ${maskoutdir}/${hem}_${i}.nii --reg ${SUBJECTS_DIR}/${SUBJECTNAME}/mri/transforms/nifti_2_FS.dat --hemi ${hem} --subject ${SUBJECTNAME} --proj frac 0 1 0.01

						# Clean up mask
						mri_binarize --dilate 1 --erode 1 --i ${maskoutdir}/${hem}_${i}.nii --o ${maskoutdir}/${hem}_${i}.nii --min 1
						
						# Mask with ribbon
						mris_calc -o ${maskoutdir}/${hem}_${i}_ribbon.nii ${maskoutdir}/${hem}_${i}.nii mul ${SUBJECTS_DIR}/${SUBJECTNAME}/mri/${hem}.ribbon_mask.nii
						
						# Assign unique label values
						fslmaths ${maskoutdir}/${hem}_${i}_ribbon.nii -bin -mul ${i} ${maskoutdir}/${hem}_${i}_ribbon.nii
					fi
				done

				# Merge all region masks
				fslmerge -t ${maskoutdir}/${hem}_ALL.nii ${maskoutdir}/${hem}_*.nii
				fslmaths ${maskoutdir}/${hem}_ALL.nii -Tmax ${maskoutdir}/${hem}_ALL.nii
			fi
		done
	done
fi

###########################################
### 4: Calculate Anatomical Statistics

# Generate stats for each atlas and hemisphere
for atlas in "aparc.a2009s" "BB38chimp"; do
	for hem in "lh" "rh"; do
		if ! [ -f ${SUBJECTS_DIR}/${SUBJECTNAME}/stats/${hem}.${atlas}.stats ] && [ -f ${SUBJECTS_DIR}/${SUBJECTNAME}/label/${hem}.${atlas}-021.label ] ; then
			mris_anatomical_stats -a ${atlas} -f ${SUBJECTS_DIR}/${SUBJECTNAME}/stats/${hem}.${atlas}.stats ${SUBJECTNAME} ${hem}
		fi
	done
done

###########################################
### 5: Create Microstructural Maps by Projecting Quantitative MRI Contrasts to Surface

# Create output directory for surface projections
myelinmapoutdir="${SUBJECTS_DIR}/${SUBJECTNAME}/SurfaceProjections"
mkdir ${myelinmapoutdir}

echo "Creating SURFACE PROJECTIONS"

# Process each resolution and contrast
for resolution in "0p3" "0p65" "0p8" "0p4"; do
	for contrast in "R1" "R2s" "MTsat" "MTsat_uncorr" "MTR" "A0" "R1_from_3T_registered" "R2s_from_3T_registered" "MTsat_from_3T_registered" "MTR_from_3T_registered" "A0_from_3T_registered" "B1"; do
		for hem in "lh" "rh"; do
			# Set source file path based on contrast type
			if [ ${contrast} == "MP2RAGE" ]; then
				sourcefile="${SUBJECTS_DIR}/../MP2RAGE/MP2RAGE_R1_brain_masked_reoriented.nii"
				regfilename="${myelinmapoutdir}/registration_nifti_2_FS_MP2RAGE.dat"
				outfile="${myelinmapoutdir}/${contrast}_${hem}.mgh"
			else
				sourcefile="${SUBJECTS_DIR}/../MPMs_to_use/${contrast}_${resolution}_run01_brain_masked_reoriented.nii"
				regfilename="${myelinmapoutdir}/registration_nifti_2_FS_${resolution}.dat"
				outfile="${myelinmapoutdir}/${contrast}_${resolution}_midcortical_${hem}.mgh"
				outfile2="${myelinmapoutdir}/${contrast}_${resolution}_average_${hem}.mgh"
				outfile3="${myelinmapoutdir}/${contrast}_${resolution}_max_${hem}.mgh"
				volfile="${myelinmapoutdir}/${contrast}_${resolution}_vol.mgz"
			fi

			# Generate registration matrix if needed
			if [ -f ${sourcefile} ] && ! [ -f ${volfile} ]; then
				echo "Getting registration matrix"
				if ! [ -f ${regfilename} ]; then
					tkregister2 --targ ${SUBJECTS_DIR}/${SUBJECTNAME}/mri/orig.mgz --mov ${sourcefile} --regheader --reg ${regfilename} --noedit
				fi
				echo "Making myelin map"
				mri_vol2vol --mov ${sourcefile} --reg ${regfilename} --o ${volfile} --no-resample --targ ${SUBJECTS_DIR}/${SUBJECTNAME}/mri/orig.mgz
			fi

			# Project volume to surface using different methods
			if [ -f ${sourcefile} ] && ! [ -f ${outfile3} ] && [ -f ${SUBJECTS_DIR}/${SUBJECTNAME}/surf/${hem}.white ] ; then
				# Mid-cortical projection
				mri_vol2surf --srcsubject ${SUBJECTNAME} --src ${sourcefile} --out_type mgh --out ${outfile} --srcreg ${regfilename} --hemi ${hem} --projfrac 0.5
				
				# Average projection
				mri_vol2surf --srcsubject ${SUBJECTNAME} --src ${sourcefile} --out_type mgh --out ${outfile2} --srcreg ${regfilename} --hemi ${hem} --projfrac-avg 0.2 0.8 0.05
				
				# Maximum intensity projection
				mri_vol2surf --srcsubject ${SUBJECTNAME} --src ${sourcefile} --out_type mgh --out ${outfile3} --srcreg ${regfilename} --hemi ${hem} --projfrac-max 0.2 0.8 0.05
			fi
		done
	done
done

###########################################
### 6: Create Cortical Profiles Using Equivolumetric Layering

if true; then
	# Generate equivolumetric surfaces
	for hem in "lh" "rh"; do
		if ! [ -f ${SUBJECTS_DIR}/${SUBJECTNAME}/surf/${hem}.KW.equi0.45.pial ]; then
			echo "Generating equivolumetric layers"
			python3 surface_tools/surface_tools-master/equivolumetric_surfaces/generate_equivolumetric_surfaces.py --smoothing 0 ${SUBJECTS_DIR}/${SUBJECTNAME}/surf/${hem}.pial ${SUBJECTS_DIR}/${SUBJECTNAME}/surf/${hem}.white 21 ${SUBJECTS_DIR}/${SUBJECTNAME}/surf/${hem}.KW.equi --software freesurfer --subject_id ${SUBJECTNAME}
		fi
	done

	# Create output directory for profiles
	profileoutdir="${SUBJECTS_DIR}/${SUBJECTNAME}/Profiles"
	mkdir ${profileoutdir}

	# Process each resolution, contrast, and depth
	for resolution in "0p3"; do 
		for contrast in "R1" "R2s" "MTsat" "MTsat_uncorr" "MTR" "R1_from_3T_registered" "R2s_from_3T_registered" "MTsat_from_3T_registered" "MTR_from_3T_registered" "A0_from_3T_registered" "B1"; do
			for hem in "lh" "rh"; do 
				
				# Set MPM file path
				mpm_file_to_use="/data/pt_02101/preprocessed/${id_slash_scan_session}_V2/MPMs_to_use/${contrast}_${resolution}_run01_brain_masked_reoriented.nii"
				
				echo $mpm_file_to_use		
				
				# Process each cortical depth
				for depth in 0.0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45 0.5 0.55 0.6 0.65 0.7 0.75 0.8 0.85 0.9 0.95 1.0; do
					
					# Generate registration matrix if needed
					if [ -f ${mpm_file_to_use} ] && ! [ -f ${profileoutdir}/registration_nifti_2_FS_${resolution}.dat ]; then
						tkregister2 --targ ${SUBJECTS_DIR}/${SUBJECTNAME}/mri/orig.mgz --mov ${mpm_file_to_use} --regheader --reg ${profileoutdir}/registration_nifti_2_FS_${resolution}.dat --noedit
					fi

					# Process BB38 regions
					for regionnr in {1..38}; do
						regionnrstr=$(printf "%03d" $regionnr)	
						projectionfile="${profileoutdir}/equi_${hem}_BB38chimp-${regionnrstr}_${contrast}_${resolution}_${depth}.mgh"
						if ! [ -f $projectionfile ] && [ -f ${SUBJECTS_DIR}/${SUBJECTNAME}/label/${hem}.BB38chimp-${regionnrstr}.label ]; then
							mri_vol2surf --src ${mpm_file_to_use} --srcreg ${profileoutdir}/registration_nifti_2_FS_${resolution}.dat --out ${projectionfile} --sd ${SUBJECTS_DIR} --srcsubject ${SUBJECTNAME} --hemi $hem --surf KW.equi${depth}.pial --mask ${SUBJECTS_DIR}/${SUBJECTNAME}/label/${hem}.BB38chimp-${regionnrstr}.label --out_type mgh
						fi
					done

					# Process whole brain (no regional mask)
					projectionfile="${profileoutdir}/equi_${hem}_whole_brain_${contrast}_${resolution}_${depth}.mgh"
					if ! [ -f $projectionfile ]; then
						mri_vol2surf --src ${mpm_file_to_use} --srcreg ${profileoutdir}/registration_nifti_2_FS_${resolution}.dat --out ${projectionfile} --sd ${SUBJECTS_DIR} --srcsubject ${SUBJECTNAME} --hemi $hem --surf KW.equi${depth}.pial --out_type mgh
					fi
				done
			done
		done
	done
fi

# Generate FreeSurfer visualization figures
bash ~/Documents/scripts/postmortembrain-mpm/Segmentation/Freesurfer/make_freesurfer_figures_with_command_line ${SUBJECTS_DIR}/${SUBJECTNAME} 0p3
bash ~/Documents/scripts/postmortembrain-mpm/Segmentation/Freesurfer/make_freesurfer_figures_with_command_line_including3T ${SUBJECTS_DIR}/${SUBJECTNAME} 0p3
